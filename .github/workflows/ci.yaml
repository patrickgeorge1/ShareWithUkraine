
name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-publish-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 14.x
      uses: actions/setup-node@v3
      with:
        node-version: 14.x

    - name: "Build (+ dependency check)"
      run: npm install
    - name: "Test"
      run: npm test --passWithNoTests

    - name: "Docker login"
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    
    - name: "Docker push"
      run: make publish-frontend
      working-directory: .


  build-publish-kafka-consumer:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: KafkaStreamedEmailSender

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '16'

    - name: "Test"
      run: mvn test

    - name: "Build"
      run: mvn package
    
    - name: "Docker login"
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    
    - name: "Docker push"
      run: make publish-mail-sender
      working-directory: .


  build-publish-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v3

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.x

    - name: "Docker login"
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    
    - name: "Docker push"
      run: make publish-backend
      working-directory: .